pip install opencv-python
pip install numpy
pip install matplotlib


import cv2
import numpy as np
import matplotlib.pyplot as plt


def apply_gradients(image):
    # Convert image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Compute gradients using Sobel operator
    grad_x = cv2.Sobel(gray, cv2.CV_64F, 1, 0, ksize=3)
    grad_y = cv2.Sobel(gray, cv2.CV_64F, 0, 1, ksize=3)

    # Combine gradient images
    gradient = cv2.addWeighted(
        cv2.convertScaleAbs(grad_x), 0.5, cv2.convertScaleAbs(grad_y), 0.5, 0
    )
    return gradient


def apply_laplacian(image):
    # Convert image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # Apply Laplacian operator
    laplacian = cv2.Laplacian(gray, cv2.CV_64F)
    return laplacian


def main():
    # Read the image
    image = cv2.imread("th.jpg")

    # Apply gradients
    gradient_image = apply_gradients(image)
    # Apply Laplacian
    laplacian_image = apply_laplacian(image)

    # Display results
    plt.figure(figsize=(10, 5))
    plt.subplot(1, 3, 1)
    plt.title("Original Image")
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.axis("off")

    plt.subplot(1, 3, 2)
    plt.title("Gradient Image")
    plt.imshow(gradient_image, cmap="gray")
    plt.axis("off")

    plt.subplot(1, 3, 3)
    plt.title("Laplacian Image")
    plt.imshow(laplacian_image, cmap="gray")
    plt.axis("off")
    plt.show()


if __name__ == "__main__":
    main()
