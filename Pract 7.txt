pip install opencv-python
pip install matplotlib

import cv2
import numpy as np
import matplotlib.pyplot as plt


def apply_smoothing(image, kernel_size):
    return cv2.GaussianBlur(image, (kernel_size, kernel_size), 0)


def apply_sharpening(image):
    kernel = np.array([[-1, -1, -1], [-1, 9, -1], [-1, -1, -1]])
    return cv2.filter2D(image, -1, kernel)


def apply_unsharp_masking(image, kernel_size, alpha, beta):
    blurred = cv2.GaussianBlur(image, (kernel_size, kernel_size), 0)
    mask = cv2.addWeighted(image, 1.5, blurred, -0.5, 0)
    return cv2.addWeighted(image, alpha, mask, beta, 0)


def main():
    # Load the image
    image = cv2.imread("th.jpg")
    # Apply smoothing
    smoothed_image = apply_smoothing(image, 5)
    # Apply sharpening
    sharpened_image = apply_sharpening(image)
    # Apply unsharp masking
    unsharp_masked_image = apply_unsharp_masking(image, 5, 1.5, -0.5)
    # Display the original and enhanced images
    plt.figure(figsize=(10, 10))
    plt.subplot(2, 2, 1), plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB)), plt.title(
        "Original"
    )
    plt.subplot(2, 2, 2), plt.imshow(
        cv2.cvtColor(smoothed_image, cv2.COLOR_BGR2RGB)
    ), plt.title("Smoothed")
    plt.subplot(2, 2, 3), plt.imshow(
        cv2.cvtColor(sharpened_image, cv2.COLOR_BGR2RGB)
    ), plt.title("Sharpened")
    plt.subplot(2, 2, 4), plt.imshow(
        cv2.cvtColor(unsharp_masked_image, cv2.COLOR_BGR2RGB)
    ), plt.title("Unsharp Masked")
    plt.show()

if __name__ == "__main__":
    main()
